- Create an input box with a button next to it.
- user can type into input box, and when you click on the button,
it will display a header with your text on it.

Summary: useRef, useState

_____________________________________________________________________________

- When you first load the page, I want the top of the page to say {candidate Name}
by calling this API: (https://api.github.com/users/Bob)
- How do you manage error handling here? What if the API is returning an error (ex: status code 500)

Summary: Async methods, Promises, UseEffect, Fetch, Then, Catch

_____________________________________________________________________________


- Create A button that calls this API: https://randomuser.me/api
- Then when user click on the button: replace  <name> with the newly generated name from that API

Summary: Async method, promises, fetch, updating
_____________________________________________________________________________

- Create another button that calls these 2 API:
https://randomuser.me/api
https://api.github.com/users/Bob

- Before you press the button, it should show text: "No Data under the button"
- After pressing the button, Print the 2 names under the button

Summary: Promises.all, map function, conditional rendering, try, catch, finally

_____________________________________________________________________________

Talk about custom hooks, what do you use custom hooks for?
- Offers reusability
- Enhances rerender speed since custom  hook does not need to be rendered again

How does authentication and authorization work?
- Access Token (JWT) needs to be verified for authentication
- User role/claims for authorization, what the user is allow to access within the app

When does rerender happen on a react component?
- When state changes

What are the differences between states and props
- Both are data that holds info. State is managed within the component and props is passed to the component
- States are mutatable and props are immutable

What store management tools are you familiar with?
How do you decide when to use context vs redux?
- Redux for global state management if we work on a larger, complex project. If the project is smaller, or we focus on encapsulating modules, it is worth using the Context API
